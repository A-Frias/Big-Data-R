boxplot(rweibull(10000,shape=f,scale=e),horizontal=TRUE,alpha=0.3,add=TRUE,cex=0.5)
x=ees$SALBRUTO
quantile(x,probs = 0.6)
# Si no especificamos probs, por defecto muestra el 0,0.25,0.5,0.75 y 1
quantile(x)
# Podemos especificar un conjunto de probs mediante seq
# Calculo los cuantiles 0,0.1,0.2, ..., 0.9,1
quantile(x,probs=seq(0,1,.1))
x=ees$SALBRUTO
plot(ecdf(x),xlim=c(0,1e5))
abline(v=quantile(x,seq(0,1,.25)),lty=2,lwd=0.5,col=2)
abline(h=seq(0,1,.25),lty=2,lwd=0.5,col=2)
# Reordenamos los niveles por orden creciente de salario mediante reorder(ESTU,SALBRUTO)
ggplot(ees) + geom_boxplot(aes(reorder(ESTU,SALBRUTO),SALBRUTO)) + theme(axis.text.x = element_text(angle=30)) +
coord_cartesian(ylim=c(0,1e5)) + xlab("")
ggplot(ees) +
geom_boxplot(aes(reorder(ESTU,SALBRUTO),SALBRUTO,fill=SEXO)) + facet_wrap(~TIPOJOR) +
theme(axis.text.x = element_text(size=6,angle=30)) + xlab("") +
coord_cartesian(ylim=c(0,1e5))
# En primer lugar escribimos una función que me calcula las métricas
seven_nums <-  function(x,p=c(0,0.05,0.25,0.5,0.75,0.95,1)){
q=quantile(x,p,na.rm=TRUE)
res =data.frame(num=length(x),m=mean(x,na.rm=TRUE),sd=sd(x,na.rm=TRUE),t(q))
names(res)[-(1:3)] =paste0("q",round(p*100))
res
}
tmp <- ees %>% group_by(ESTU,SEXO,TIPOJOR) %>% do({
seven_nums(.$SALBRUTO)
})
ggplot(tmp) +
geom_boxplot(aes(x=reorder(ESTU,m),ymin=q5,lower=q25,middle=q50,
upper=q75,ymax=q95,fill=SEXO),alpha=0.3,stat="identity") +
geom_point(aes(reorder(ESTU,m),m,color=SEXO), position=position_dodge(width=.9)) +
facet_wrap(~ TIPOJOR) +
theme(axis.text.x = element_text(size=6,angle=30))
opar <- par(mfrow=c(2,2),mex=0.8,mar=c(3,3,2,1)+.1)
colors=rep(c("red","blue","green"),nrow(iris))
stripchart(iris$Sepal.Length~iris$Species,col=colors)
stripchart(iris$Sepal.Length~iris$Species,method="stack",col=colors)
stripchart(iris$Sepal.Length~iris$Species,method="jitter",col=colors)
stripchart(iris$Sepal.Length~iris$Species,method="jitter",jitter=.03,col=colors)
par(opar)
varn <- function(x){sum((x-mean(x))^2)}
res=NULL
# Genero 10000 muestras de tamaño 10 y calculo la suma de cuadrados
n=10
s<- replicate(10000,varn(rnorm(n)))
mean(s)
# Para una muestra de tamaño 100
n=100
s<- replicate(10000,varn(rnorm(n)))
mean(s)
library(e1071)
df=rbind(data.frame(asim="right",x=rweibull(1000,shape = 1.3,scale= 1)),
data.frame(asim="left",x=rweibull(1000,shape = 7,scale=3)-2),
data.frame(asim="norm",x=rnorm(10000,mean=1,sd=1)))
skew= df %>% group_by(asim) %>% summarise(sk=skewness(x))
ggplot(df) + geom_density(aes(x,color=asim)) +
geom_text(aes(1.2*(as.numeric(asim)-1.5),c(0.5,1,0.4),label=paste0("Sk=",round(sk,2)), color=asim),data=skew) +
scale_color_hue(guide=FALSE)
# Uniforme  - platicúrtica
# Es intervalo ha elegido para que tenga varianza unidad
xu=runif(100000,min = -1.73,max = 1.73)
kurtosis(xu)
# t-student - leptocúrtica
xt=rt(100000,df=4)
# Escalo para que tenga varianza unidad
xt=xt/sd(xt)
kurtosis(xt)
df=rbind(data.frame(K="t-student - lepto",x=xt),
data.frame(K="Uniforme - plati",x=xu),
data.frame(K="Normal",x=rnorm(100000,mean=0,sd=1)))
ggplot(df) + geom_density(aes(x,color=K)) + xlim(-5,5)
x=ees$SALBRUTO
n=length(x)
x=sort(x)
cumx=cumsum(x)
plot((1:n)/n,cumx/cumx[n],type="l",xlab="Prop personas",ylab="Prop salario acumulado")
polygon(c(0,(1:n)/n,0),c(0,cumx/cumx[n],0),col="yellow")
abline(0,1)
if(!require('ineq'))
install.packages('ineq')
library('ineq')
# Indice de GIni
Gini(ees$SALBRUTO)
# Curva de Lorentz
plot(Lc(ees$SALBRUTO))
ees %>% group_by(SEXO) %>% summarise(gini=Gini(SALBRUTO))
ees %>% group_by(ESTU) %>% summarise(gini=Gini(SALBRUTO))
x=rnorm(100)
y=1+2*x+2*rnorm(100)
mx=mean(x)
my=mean(y)
df=data.frame(x,y)
df=df %>% mutate(difmx=x-mx,difmy=y-my,cov=factor(sign(difmx*difmy)))
y=1-2*x + 2*rnorm(100)
df1=data.frame(x,y)
df1=df1 %>% mutate(difmx=x-mx,difmy=y-my,cov=factor(sign(difmx*difmy)))
df=rbind(cbind(corr="positiva",df),cbind(corr="negativa",df1))
ggplot(df) + geom_point(aes(x,y,color=cov)) + geom_hline(aes(yintercept = my),color="grey60",lty=2) + geom_vline(aes(xintercept = mx),lty=2,color="grey60") +
facet_wrap(~corr) + xlab("") + ylab("")
x=rnorm(100,sd=4); y=2*x + rnorm(100)
cov(x,y)
cor(x,y)
set.seed(2)
x=rnorm(200);
#
y=x^2 + rnorm(200)
cor(x,y)
plot(x,y,cex=0.7)
tmp <- body %>%  select(Age,Gender,Weight, Height, Chest_diameter,Chest_depth,	                            Bitrochanteric_diameter,Wrist_min_girth, Ankle_min_girth)
tmp$Gender=factor(tmp$Gender)
levels(tmp$Gender)=c("W","M")
cor(tmp[c(1,3,4,5)])
pairs(tmp,col=as.numeric(tmp$Gender),cex=0.5,alpha=0.3)
library(GGally)
ggpairs(tmp, columns=c(1,3:6))
ggpairs(tmp, mapping=ggplot2::aes(color = Gender),columns=c(1,3:6))
install.packages(contrib.url)
install.packages("contrib.url")
install.packages("contrib.url")
knitr::opts_chunk$set(echo = TRUE)
ggplot(tmp)+
geom_col(aes(estacion, value, fill=variable), stat="identity", position="dodge")+
facet_grid(estacion~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5) ,)
ggplot(tmp)+
geom_col(aes(estacion, value, fill=variable), stat="identity", position="dodge")+
facet_grid(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5) ,)
ggplot(tmp)+
geom_col(aes(estacion, value, fill=variable), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5) ,)
tmp<-meteo_data%>%group_by(estacion)%>%summarise_each(funs(std=sd(.,na.rm=TRUE) , rango=IQR(., na.rm=TRUE)) , vari)
kable(tmp)
knitr::opts_chunk$set(echo = TRUE)
tmp <- meteo_data %>% filter(estacion=="ZARAGOZA") %>% group_by(Mean_TemperatureC) %>% summarise(id="ZARAGOZA" , count=n())
tmpbis <- meteo_data%>% melt(id=c("estacion","Date") , measure=("Mean_TemperatureC"))
ggplot(tmpbis %>% filter(estacion == "ZARAGOZA"))+
geom_histogram(aes(value), binwidth = 1 )+
theme(legend.title =  element_text("Histograma de temperatura media en Zaaragoza. 2016"))
ggplot(tmpbis %>% group_by(estacion)) +
geom_histogram(aes(value , fill= estacion), position="dodge", binwidth = 3)
ggplot(tmpbis) +
geom_freqpoly(aes(value , color=estacion), position="dodge", binwidth = 1)
ggplot(tmpbis) +
geom_density(aes(value , color= estacion), position="dodge")
tmpprec<- meteo_data %>% melt(id="estacion" , measure="Precipitationmm")
ggplot(tmpprec %>% mutate(value = value + 0.0001)) +
geom_density(aes(value , color=estacion ), position="dodge", binwidth = 1 ) + scale_x_log10()
tmp<- meteo_data%>% melt(id="estacion", measure=c("Mean_TemperatureC","Mean_Wind_SpeedKm_h","WindDirDegrees",
"Precipitationmm" ,"CloudCover" ,"Mean_Humidity"))
ggplot(tmp)+
geom_density(aes(value, color=estacion))+ facet_wrap(~estacion, scales="free")
ggplot(tmpbis %>% group_by(estacion))+
geom_boxplot(aes(estacion, value ))
ggplot(tmp)+
geom_boxplot(aes(estacion, value))+
facet_wrap(~variable , scale="free")+
theme(axis.text.x = element_text(angle=90, size=6))
prueba<-meteo_data %>% melt(id="estacion", measure=c("Min_TemperatureC", "Max_TemperatureC"))
ggplot(prueba %>% group_by(variable))+
geom_boxplot(aes(estacion, value))+ facet_grid(~variable, scales="free") + theme(axis.text.x = element_text(angle=90))
tmp <- meteo_data%>%group_by(estacion)%>%filter(Rain==TRUE)%>% count()
kable(tmp)
tmp<-meteo_data%>%group_by(estacion)%>%summarise_each(funs(std=sd(.,na.rm=TRUE) , rango=IQR(., na.rm=TRUE)) , vari)
kable(tmp)
knitr::opts_chunk$set(echo = TRUE)
tmp <- meteo_data %>% filter(estacion=="ZARAGOZA") %>% group_by(Mean_TemperatureC) %>% summarise(id="ZARAGOZA" , count=n())
library(dplyr)
library(ggplot2)
library(reshape2)
library(knitr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(knitr)
library(tidyverse)
setwd("~/Formacion informatica/Master R/Proyectos/Master BD/3 Ciencia de datos con R/Datos ciencia de datos")
library(tidyverse)
setwd("~/Formacion informatica/Master R/Proyectos/Master BD/3 Ciencia de datos con R/Datos ciencia de datos")
estaciones <- read.delim("estaciones_meteo.txt",sep="\t")
estaciones <- estaciones %>% filter(estacion %in% c("MADRID","BARCELONA","SEVILLA","MALAGA","ZARAGOZA","BILBAO","VIGO"))
meteo_data <- read.delim("meteo_data.csv",sep=";",stringsAsFactors = FALSE)
meteo_data <- meteo_data %>% mutate(Date=as.Date(Date))
meteo_data <- meteo_data %>% filter(estacion %in% estaciones$estacion)
knitr::opts_chunk$set(echo = TRUE)
tmp <- meteo_data %>% filter(estacion=="ZARAGOZA") %>% group_by(Mean_TemperatureC) %>% summarise(id="ZARAGOZA" , count=n())
tmpbis <- meteo_data%>% melt(id=c("estacion","Date") , measure=("Mean_TemperatureC"))
ggplot(tmpbis %>% filter(estacion == "ZARAGOZA"))+
geom_histogram(aes(value), binwidth = 1 )+
theme(legend.title =  element_text("Histograma de temperatura media en Zaaragoza. 2016"))
ggplot(tmpbis %>% group_by(estacion)) +
geom_histogram(aes(value , fill= estacion), position="dodge", binwidth = 3)
ggplot(tmpbis) +
geom_freqpoly(aes(value , color=estacion), position="dodge", binwidth = 1)
ggplot(tmpbis) +
geom_density(aes(value , color= estacion), position="dodge")
tmpprec<- meteo_data %>% melt(id="estacion" , measure="Precipitationmm")
ggplot(tmpprec %>% mutate(value = value + 0.0001)) +
geom_density(aes(value , color=estacion ), position="dodge", binwidth = 1 ) + scale_x_log10()
tmp<- meteo_data%>% melt(id="estacion", measure=c("Mean_TemperatureC","Mean_Wind_SpeedKm_h","WindDirDegrees",
"Precipitationmm" ,"CloudCover" ,"Mean_Humidity"))
ggplot(tmp)+
geom_density(aes(value, color=estacion))+ facet_wrap(~estacion, scales="free")
ggplot(tmpbis %>% group_by(estacion))+
geom_boxplot(aes(estacion, value ))
ggplot(tmp)+
geom_boxplot(aes(estacion, value))+
facet_wrap(~variable , scale="free")+
theme(axis.text.x = element_text(angle=90, size=6))
prueba<-meteo_data %>% melt(id="estacion", measure=c("Min_TemperatureC", "Max_TemperatureC"))
ggplot(prueba %>% group_by(variable))+
geom_boxplot(aes(estacion, value))+ facet_grid(~variable, scales="free") + theme(axis.text.x = element_text(angle=90))
tmp <- meteo_data%>%group_by(estacion)%>%filter(Rain==TRUE)%>% count()
kable(tmp)
tmp2 <- meteo_data%>%group_by(estacion)%>%filter(Precipitationmm>0.0001)%>% count()
kable(cbind(tmp,tmp2[-1]))
ggplot(tmp)+
geom_bar(aes(estacion,n, fill=estacion) , stat="identity")
ggplot(meteo_data%>%filter(Rain==TRUE))+
geom_histogram(aes(estacion, fill=Rain) , stat="count")
categoricas_melted<- meteo_data%>%melt(id="estacion" , measure=c("Fog"           ,      "Hail"        ,
"Rain"         ,       "Snow" ,               "Thunderstorm"       , "Tornado"            ))
ggplot(categoricas_melted%>% filter(value==TRUE))+
geom_histogram(aes(variable, color=estacion), stat="count", position="dodge", binwidth=10)
meteo_data%>%group_by(estacion)%>%summarise(media=mean(Mean_Wind_SpeedKm_h), mediana=median(Mean_Wind_SpeedKm_h), media_truncada=mean(Mean_Wind_SpeedKm_h, trim=0.01))
vari=c("Mean_TemperatureC", "Mean_Wind_SpeedKm_h", "WindDirDegrees", "Precipitationmm" ,"CloudCover" ,"Mean_Humidity")
meteo_data%>%group_by(estacion)%>% summarise_each(funs(mean=mean(.), mediana=median(.), trimmean=mean(.,trim=0.01)) , all_of(vari))
tmp=meteo_data%>%melt(id="estacion", measure=c("Mean_TemperatureC", "Mean_Wind_SpeedKm_h", "WindDirDegrees", "Precipitationmm" ,"CloudCover" ,"Mean_Humidity"))
tmp%>%group_by(variable, estacion)%>%summarise(media=mean(value), mediana=median(value), trimmean=mean(value, trim=0.01))
tmp<-meteo_data%>%group_by(estacion)%>% summarise_each(funs(mean=mean(.), mediana=median(.), trimmean=mean(.,trim=0.01)) , all_of(vari))%>%select(estacion,matches("Tem(.*)_mean"))
ggplot(tmp)+
geom_col(aes(estacion, Mean_TemperatureC_mean) )
meteo_data%>%group_by(estacion)%>%summarise(std_prec=sd(Precipitationmm) , rango=IQR(Precipitationmm),prop_dias_lluviosos=( sum(ifelse(Precipitationmm>0.001,1,0))/365)*100)
tmp<-meteo_data%>%group_by(estacion)%>%summarise_each(funs(std=sd(.,na.rm=TRUE) , rango=IQR(., na.rm=TRUE)) , vari)
kable(tmp)
tmp<- tmp%>%melt(id="estacion", measure=c(paste0(vari,"_std"), paste0(vari,"_rango")))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=variable), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5) ,)
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5) ,)
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), title = element_text(size=8) ,)
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), title = element_text(size=5) ,)
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), title = element_text(size=5))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x.top  = element_text(size=5))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free" , title(size=5))+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x.top  = element_text(size=5))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x.top  = element_title(size=5))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x  = element_text(size=5))
# Escalamos el IQR para que coincida en magnitud con la mad y la sd si la distribución es normal
dispersion %>% mutate(iqr=iqr/1.34898) %>%
melt(id=c("estacion","variable"),variable.name="medida") %>%
ggplot() +
geom_point(aes(estacion,value,color=medida)) +
geom_line(aes(estacion,value,color=medida,group=medida)) +
facet_wrap(~variable,scales="free") + theme(axis.text.x = element_text(angle=90))
dispersion <- meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
meteo_long <- melt(meteo_data,id=c("estacion","Date"),
measure.vars = c("Mean_TemperatureC","Mean_Wind_SpeedKm_h","WindDirDegrees",
"Precipitationmm","CloudCover","Mean_Humidity"))
meteo_long %>%
ggplot() + geom_density(aes(value,color=estacion)) + facet_wrap(~variable,scales = "free") +
scale_color_brewer(palette = "Set1")
dispersion <- meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
dispersion
# Escalamos el IQR para que coincida en magnitud con la mad y la sd si la distribución es normal
dispersion %>% mutate(iqr=iqr/1.34898) %>%
melt(id=c("estacion","variable"),variable.name="medida") %>%
ggplot() +
geom_point(aes(estacion,value,color=medida)) +
geom_line(aes(estacion,value,color=medida,group=medida)) +
facet_wrap(~variable,scales="free") + theme(axis.text.x = element_text(angle=90))
View(dispersion)
tmp<-meteo_data%>%group_by(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE)) )
tmp<-meteo_data%>%group_by(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
View(tmp)
tmp<-meteo_long%>%group_by(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
View(meteo_long)
tmp<-meteo_long%>%group_by(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
dispersion <- meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
View(meteo_long)
tmp<-meteo_long%>%groups(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
_by
tmp<-meteo_long%>%group_by(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
tmp<-meteo_long%>%group_by(estacion,variable)%>%summarise.groups(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
library(reshape2)
library(tidyverse)
# Comprueba la localización de los ficheros en tu ordenador y adapta la ruta si es necesario
estaciones <- read.delim("../../Datasets/estaciones_meteo.txt",sep="\t")
library(reshape2)
library(tidyverse)
# Comprueba la localización de los ficheros en tu ordenador y adapta la ruta si es necesario
estaciones <- read.delim("../../Datasets/estaciones_meteo.txt",sep="\t")
library(reshape2)
library(tidyverse)
# Comprueba la localización de los ficheros en tu ordenador y adapta la ruta si es necesario
estaciones <- read.delim("../../Datasets/estaciones_meteo.txt",sep="\t")
library(reshape2)
library(tidyverse)
# Comprueba la localización de los ficheros en tu ordenador y adapta la ruta si es necesario
estaciones <- read.delim("../../Datasets/estaciones_meteo.txt",sep="\t")
library(reshape2)
library(tidyverse)
# Comprueba la localización de los ficheros en tu ordenador y adapta la ruta si es necesario
estaciones <- read.delim("../../Datasets/estaciones_meteo.txt",sep="\t")
library(reshape2)
library(tidyverse)
# Comprueba la localización de los ficheros en tu ordenador y adapta la ruta si es necesario
estaciones <- read.delim("../../Datasets/estaciones_meteo.txt",sep="\t")
summary(meteo_data)
library(reshape2)
library(tidyverse)
# Comprueba la localización de los ficheros en tu ordenador y adapta la ruta si es necesario
#estaciones <- read.delim("../../Datasets/estaciones_meteo.txt",sep="\t")
#estaciones <- estaciones %>%  filter(estacion %in% c("MADRID","BARCELONA","SEVILLA","ZARAGOZA","BILBAO","VIGO"))
# meteo_data <- read.delim("../../Datasets/meteo_data.csv",sep=";",stringsAsFactors = FALSE)
#meteo_data <- meteo_data %>% mutate(Date=as.Date(Date))
#meteo_data <- meteo_data %>% filter(estacion  %in% estaciones$estacion)
summary(meteo_data)
est="ZARAGOZA"
meteo_data %>% filter(estacion==est) %>%
ggplot() + geom_histogram(aes(Mean_TemperatureC),binwidth = 1)
var="Mean_TemperatureC"
meteo_data %>%
ggplot() + geom_histogram(aes_string(var,color="estacion"),position = "identity",fill=NA,binwidth = 2.5) +
scale_color_brewer(palette = "Set1")
meteo_data %>%
ggplot() + geom_freqpoly(aes(Mean_TemperatureC,color=estacion)) +
scale_color_brewer(palette = "Set1")
meteo_data %>%
ggplot() + geom_density(aes(Mean_TemperatureC,color=estacion)) +
scale_color_brewer(palette = "Set1")
meteo_data %>%
ggplot() + geom_histogram(aes(Precipitationmm,color=estacion),position = "identity",fill=NA,binwidth = 2.5) +
scale_color_brewer(palette = "Set1")
meteo_data %>% mutate(Precipitationmm = Precipitationmm +0.01) %>% #Para poder ver el 0 en esa escala
ggplot() + geom_density(aes(Precipitationmm,color=estacion)) +
scale_color_brewer(palette = "Set1") + scale_x_log10()
meteo_long <- melt(meteo_data,id=c("estacion","Date"),
measure.vars = c("Mean_TemperatureC","Mean_Wind_SpeedKm_h","WindDirDegrees",
"Precipitationmm","CloudCover","Mean_Humidity"))
meteo_long %>%
ggplot() + geom_density(aes(value,color=estacion)) + facet_wrap(~variable,scales = "free") +
scale_color_brewer(palette = "Set1")
meteo_data %>%
ggplot() + geom_boxplot(aes(estacion,Max_TemperatureC))
meteo_long %>%
ggplot() + geom_boxplot(aes(estacion, value,color=estacion)) + facet_wrap(~variable,scales = "free") +
scale_color_brewer(palette = "Set1") + theme(legend.position = 'none',axis.text.x = element_text(angle=90))
table(meteo_data$estacion,meteo_data$Rain)
table(meteo_data$estacion,meteo_data$Precipitationmm>0)
# Hagamoslo de una manera diferente
meteo_data %>%  group_by(estacion,Fog) %>% summarise(num=n())
# Equivalente a
# meteo_data %>%  count(estacion,Fog)
# Recuerda siempre promero convertir los datos a tipo long
meteo_cat <- melt(meteo_data,id=c("estacion","Date"),
measure.vars = c("Fog","Hail","Rain","Snow","Thunderstorm","Tornado"))
meteo_cat %>%
ggplot() + geom_bar(aes(value,fill=estacion),position="dodge") + facet_wrap(~variable,scales = "free") +
scale_fill_brewer(palette = "Set1")
meteo_cat %>%
ggplot() + geom_bar(aes(value,fill=value)) + facet_grid(variable~estacion,scales = "free") +
theme(legend.position = 'none')
meteo_data %>% group_by(estacion) %>%
summarise(mean=mean(Mean_Wind_SpeedKm_h),med=median(Mean_Wind_SpeedKm_h),trimmean=mean(Mean_Wind_SpeedKm_h,trim=0.1))
medias <- meteo_long %>% group_by(estacion,variable) %>%
summarise(mean=mean(value,na.rm=TRUE),median=median(value,na.rm=TRUE),trimmean=mean(value,trim=0.1,na.rm=TRUE))
medias
mediasw <- meteo_data %>%  group_by(estacion) %>%
summarise_each(funs(mean=mean(.,na.rm=TRUE),median=median(.,na.rm=TRUE),trimmean=mean(.,trim=0.1,na.rm=TRUE)),
Max_TemperatureC:Mean_Humidity)
mediasw
# Otra forma muy parecida
# meteo_data %>%  group_by(estacion) %>%
#   summarise_at(vars(Max_TemperatureC:Mean_Humidity),
#           funs(mean=mean(.,na.rm=TRUE),median=median(.,na.rm=TRUE),trimmean=mean(.,trim=0.1,na.rm=TRUE)))
mediasw %>% select(estacion,matches("Temper(.*)_mean"))
ggplot(melt(medias,id=c("estacion","variable"),variable.name="medida")) +
geom_point(aes(estacion,value,color=medida)) +
geom_line(aes(estacion,value,color=medida,group=medida)) +
facet_wrap(~variable,scales="free") + theme(axis.text.x = element_text(angle=90))
medias_ang <- meteo_data %>% group_by(estacion) %>%
summarise(mean=180*atan2(mean(sin(pi*WindDirDegrees/180)),mean(cos(pi*WindDirDegrees/180)))/pi,
median=180*atan2(median(sin(pi*WindDirDegrees/180)),median(cos(pi*WindDirDegrees/180)))/pi,
trimmean=180*atan2(mean(sin(pi*WindDirDegrees/180),trim=0.1),
mean(cos(pi*WindDirDegrees/180),trim=0.1))/pi)
medias_ang
# La funcion atan2 devuelve ángulos en [-180,180]. Para que sean en [0,360]
medias_ang <- medias_ang %>% group_by(estacion) %>% mutate_each(funs(f360=(.+360)%% 360))
medias_ang
meteo_data %>% group_by(estacion) %>%
summarise(sd=sd(Precipitationmm,na.rm=TRUE),iqr=IQR(Precipitationmm,na.rm=TRUE))
dispersion <- meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
dispersion
# Escalamos el IQR para que coincida en magnitud con la mad y la sd si la distribución es normal
dispersion %>% mutate(iqr=iqr/1.34898) %>%
melt(id=c("estacion","variable"),variable.name="medida") %>%
ggplot() +
geom_point(aes(estacion,value,color=medida)) +
geom_line(aes(estacion,value,color=medida,group=medida)) +
facet_wrap(~variable,scales="free") + theme(axis.text.x = element_text(angle=90))
# te puede ser util esta función
seven_nums <- function(x,p=c(0,0.05,0.25,0.5,0.75,0.95,1)){
q=quantile(x,p,na.rm=TRUE)
res =data.frame(num=length(x),m=mean(x,na.rm=TRUE),sd=sd(x,na.rm=TRUE),t(q))
# cambio el nombre a los cuantiles
names(res)[-(1:3)] =paste0("q",round(p*100))
res
}
cuants <- meteo_long %>% group_by(estacion,variable) %>% do(seven_nums(.$value))
cuants
ggplot(cuants) +
geom_boxplot(aes(x=estacion,ymin=q5,lower=q25,middle=q50,upper=q75,ymax=q95),stat="identity") +
geom_pointrange(aes(estacion,y=m,ymin=m-sd,ymax=m+sd),color="red") +
facet_wrap(~variable,scales="free") + theme(axis.text.x = element_text(angle = 45))
library(e1071)
forma<- meteo_long %>% group_by(estacion,variable) %>%
summarise(m=mean(value,na.rm=TRUE),sd=sd(value,na.rm=TRUE),cv=sd/abs(m),sk=skewness(value,na.rm=TRUE),k=kurtosis(value,na.rm=TRUE))
forma
# cv
ggplot(forma) + geom_bar(aes(estacion,cv),stat="identity", fill="red",alpha=0.5) +
geom_text(aes(estacion,0.8*cv, label=round(cv,2)),size=3,stat="identity") +
facet_wrap(~variable) + theme(axis.text.x=element_text(angle=90))
# Todo a la vez - Usemos melt otra vez
melt(forma,id=c("estacion","variable"),variable.name="medida") %>%
ggplot() +
geom_bar(aes(estacion,value,fill=variable),stat="identity",alpha=0.5) +
geom_text(aes(estacion,0.8*value, label=round(value,2)),size=2.5) +
facet_wrap(~paste(variable,"-",medida),scales="free",ncol=5) +
theme(legend.position='none',strip.text = element_text(color='blue',size=6))
tmp<- meteo_data %>% filter(estacion=="BARCELONA")
cor(tmp[4:12],use='complete')
library(GGally)
meteo_data %>% filter(estacion=="BARCELONA") %>%
ggpairs(columns = 4:12)
library(GGally)
ggpairs(meteo_data,mapping = aes(color=estacion),columns = 4:12)
corw <- meteo_data %>%  group_by(estacion) %>% do(corm={
df<- as.data.frame(cor(.[4:12],use="complete"))
cbind(variable1=row.names(df),df)
}) %>% ungroup() %>%  unnest()
corw
tmp<-meteo_long%>%group_by(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
kable(tmp)
tmp<- tmp%>%melt(id="estacion", measure=c(paste0(vari,"_std"), paste0(vari,"_rango")))
tmp<-meteo_long%>%group_by(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
tmp<-meteo_long%>%group_by(estacion,variable)%>%summarise(sd=sd(value,na.rm=TRUE) , rg=IQR(value, na.rm=TRUE))
dispersion <- meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
cuants <- meteo_long %>% group_by(estacion,variable) %>% do(seven_nums(.$value))
cuants
tmp<-meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
tmp<-meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
kable(tmp)
tmp<- tmp%>%melt(id="estacion", measure=c(paste0(vari,"_std"), paste0(vari,"_rango")))
tmp<-meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
kable(tmp)
#tmp<- tmp%>%melt(id="estacion", measure=c(paste0(vari,"_std"), paste0(vari,"_rango")))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=estacion), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x  = element_text(size=5))
#tmp<- tmp%>%melt(id="estacion", measure=c(paste0(vari,"_std"), paste0(vari,"_rango")))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=c("sd","rg")), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x  = element_text(size=5))
tmp<- tmp%>%melt(id=c("estacion","variable)", measure=c("sd","rango")))
tmp<- tmp%>%melt(id=c("estacion","variable"), measure=c("sd","rg"))
tmp<- tmp%>%melt(id=c("estacion","variable"), measure=c("sd","iqr"))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=c("sd","rg")), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x  = element_text(size=5))
tmp<- tmp%>%melt(id=c("estacion","variable"),variable.name=medida,  measure=c("sd","iqr"))
tmp<-meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE))
tmp<- tmp%>%melt(id=c("estacion","variable"),variable.name=medida,  measure=c("sd","iqr"))
tmp<- tmp%>%melt(id=c("estacion","variable"),variable.name="medida",  measure=c("sd","iqr"))
ggplot(tmp)+
geom_col(aes(estacion, medida, fill=medida), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x  = element_text(size=5))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=medida), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x  = element_text(size=5))
tmp<-meteo_long %>% group_by(estacion,variable) %>%
summarise(sd=sd(value,na.rm=TRUE),iqr=IQR(value,na.rm=TRUE), mean=mean(value, na.rm=TRUE))
tmp<- tmp%>%melt(id=c("estacion","variable"),variable.name="medida",  measure=c("sd","iqr","mean"))
ggplot(tmp)+
geom_col(aes(estacion, value, fill=medida), stat="identity", position="dodge")+
facet_wrap(~variable, scale="free")+ theme(axis.text.x = element_text(angle=45, size=5), axis.title.x  = element_text(size=5))
inline <- function(x = "") paste0("`` `r ", x, "` ``")
q()
